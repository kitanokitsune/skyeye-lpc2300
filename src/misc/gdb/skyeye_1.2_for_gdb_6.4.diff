diff -Nur skyeye-v1_Rel/gdb642skyeye.patch skyeye-v1_gdb/gdb642skyeye.patch
--- skyeye-v1_Rel/gdb642skyeye.patch	1969-12-31 19:00:00.000000000 -0500
+++ skyeye-v1_gdb/gdb642skyeye.patch	2007-02-01 04:45:02.000000000 -0500
@@ -0,0 +1,879 @@
+diff -ruNa --exclude=CVS gdb-6.4-old/configure gdb-6.4/configure
+--- gdb-6.4-old/configure	2005-10-17 20:54:34.000000000 +0800
++++ gdb-6.4/configure	2007-02-01 17:42:52.000000000 +0800
+@@ -11,6 +11,10 @@
+ ac_help=
+ ac_default_prefix=/usr/local
+ # Any additions from configure.in:
++#teawater SKYEYE go back to GDB 2006.09.29 begin--------------------------------
++ac_help="$ac_help
++  --enable-skyeye        Link gdb with SKYEYE"
++#teawater SKYEYE go back to GDB 2006.09.29 end----------------------------------
+ ac_help="$ac_help
+   --enable-libada        Builds libada directory"
+ ac_help="$ac_help
+@@ -418,7 +422,6 @@
+ 
+   esac
+ done
+-
+ if test -n "$ac_prev"; then
+   { echo "configure: error: missing argument to --`echo $ac_prev | sed 's/_/-/g'`" 1>&2; exit 1; }
+ fi
+@@ -2570,6 +2573,13 @@
+   fi
+ done
+ 
++#teawater SKYEYE go back to GDB 2006.09.29 begin--------------------------------
++# Check whether --enable-skyeye or --disable-skyeye was given.
++if ! test "${enable_skyeye}" = no; then
++  configdirs="$configdirs skyeye"
++fi
++#teawater SKYEYE go back to GDB 2006.09.29 end----------------------------------
++
+ target_configdirs_all="$target_configdirs"
+ target_configdirs=
+ for i in ${target_configdirs_all} ; do
+@@ -3206,7 +3216,6 @@
+     bootstrap_suffix=no-bootstrap ;;
+ esac
+ 
+-
+ for module in ${build_configdirs} ; do
+   if test -z "${no_recursion}" \
+      && test -f ${build_subdir}/${module}/Makefile; then
+diff -ruNa --exclude=CVS gdb-6.4-old/gdb/configure gdb-6.4/gdb/configure
+--- gdb-6.4-old/gdb/configure	2005-07-25 23:08:40.000000000 +0800
++++ gdb-6.4/gdb/configure	2007-02-01 17:42:52.000000000 +0800
+@@ -905,6 +905,7 @@
+ it to find libraries and programs with nonstandard names/locations.
+ 
+ _ACEOF
++
+ fi
+ 
+ if test "$ac_init_help" = "recursive"; then
+@@ -21634,6 +21635,26 @@
+   ignore_sim=true
+ fi
+ 
++#teawater SKYEYE go back to GDB 2006.10.03 begin--------------------------------
++SKYEYE_OBS="skyeye-target.o"
++LIBSKYEYE="../skyeye/libskyeye.a"
++LIBSKYEYEGTK="`pkg-config gtk+-2.0 --libs`"
++DIST="gdbskyeye"
++if test ! -f ${LIBSKYEYE}
++then
++	SKYEYE_OBS=""
++	LIBSKYEYE=""
++	LIBSKYEYEGTK=""
++	IGNORE_RDP=""
++	DIST="gdb"
++else
++	#remove sim because some functions names of skyeye is same with gdb sim
++	ignore_sim=true
++	#remove rdp because it need gdb/sim/common/callback.c
++	IGNORE_RDP="TDEPFILES= arm-tdep.o remote-rdi.o"
++fi
++#teawater SKYEYE go back to GDB 2006.10.03 end----------------------------------
++
+ if test "${ignore_sim}" = "true"; then
+     IGNORE_SIM="SIM="
+     IGNORE_SIM_OBS="SIM_OBS="
+@@ -22694,6 +22715,7 @@
+ # No need to generate the scripts if there are no CONFIG_FILES.
+ # This happens for instance when ./config.status config.h
+ if test -n "\$CONFIG_FILES"; then
++#teawater SKYEYE go back to GDB 2006.10.03 begin--------------------------------
+   # Protect against being on the right side of a sed subst in config.status.
+   sed 's/,@/@@/; s/@,/@@/; s/,;t t\$/@;t t/; /@;t t\$/s/[\\\\&,]/\\\\&/g;
+    s/@@/,@/; s/@@/@,/; s/@;t t\$/,;t t/' >\$tmp/subs.sed <<\\CEOF
+@@ -22876,7 +22898,13 @@
+ s,@host_makefile_frag@,,;t t
+ /@target_makefile_frag@/r $target_makefile_frag
+ s,@target_makefile_frag@,,;t t
++s,@SKYEYE_OBS@,$SKYEYE_OBS,;t t
++s,@LIBSKYEYE@,$LIBSKYEYE,;t t
++s,@LIBSKYEYEGTK@,$LIBSKYEYEGTK,;t t
++s,@IGNORE_RDP@,$IGNORE_RDP,;t t
++s,@DIST@,$DIST,;t t
+ CEOF
++#teawater SKYEYE go back to GDB 2006.10.03 end----------------------------------
+ 
+ _ACEOF
+ 
+diff -ruNa --exclude=CVS gdb-6.4-old/gdb/Makefile.in gdb-6.4/gdb/Makefile.in
+--- gdb-6.4-old/gdb/Makefile.in	2005-11-16 20:44:10.000000000 +0800
++++ gdb-6.4/gdb/Makefile.in	2007-02-01 17:42:52.000000000 +0800
+@@ -184,12 +184,18 @@
+ SUBDIR_MI_CFLAGS= \
+ 	-DMI_OUT=1
+ 
++#teawater SKYEYE go back to GDB 2006.10.20 begin--------------------------------
++DIST=@DIST@
++#teawater SKYEYE go back to GDB 2006.10.20 end----------------------------------
++
+ #
+ # TUI sub directory definitions
+ #
+ 
+ # Name of the TUI program
+-TUI=gdbtui
++#teawater SKYEYE go back to GDB 2006.10.03 begin--------------------------------
++TUI=$(DIST)tui
++#teawater SKYEYE go back to GDB 2006.10.03 end----------------------------------
+ 
+ SUBDIR_TUI_OBS = \
+ 	tui-command.o \
+@@ -361,6 +367,12 @@
+ # PROFILE_CFLAGS is _not_ included, however, because we use monstartup.
+ INTERNAL_LDFLAGS = $(CFLAGS) $(GLOBAL_CFLAGS) $(MH_LDFLAGS) $(LDFLAGS) $(CONFIG_LDFLAGS)
+ 
++#teawater SKYEYE go back to GDB 2006.10.03 begin--------------------------------
++SKYEYE_OBS = @SKYEYE_OBS@
++LIBSKYEYE = @LIBSKYEYE@
++LIBSKYEYEGTK = @LIBSKYEYEGTK@
++#teawater SKYEYE go back to GDB 2006.10.03 end----------------------------------
++
+ # If your system is missing alloca(), or, more likely, it's there but
+ # it doesn't work, then refer to libiberty.
+ 
+@@ -372,17 +384,21 @@
+ INSTALLED_LIBS=-lbfd -lreadline -lopcodes -liberty \
+ 	$(XM_CLIBS) $(TM_CLIBS) $(NAT_CLIBS) $(GDBTKLIBS) @LIBS@ \
+ 	-lintl -liberty
++#teawater SKYEYE go back to GDB 2006.10.03 begin--------------------------------
+ CLIBS = $(SIM) $(READLINE) $(OPCODES) $(BFD) $(INTL) $(LIBIBERTY) \
+ 	$(XM_CLIBS) $(TM_CLIBS) $(NAT_CLIBS) $(GDBTKLIBS) @LIBS@ \
+ 	$(LIBICONV) \
+-	$(LIBIBERTY) $(WIN32LIBS)
++	$(LIBIBERTY) $(WIN32LIBS) $(LIBSKYEYE) $(LIBSKYEYEGTK)
+ CDEPS = $(XM_CDEPS) $(TM_CDEPS) $(NAT_CDEPS) $(SIM) $(BFD) $(READLINE) \
+-	$(OPCODES) $(INTL_DEPS) $(LIBIBERTY) $(CONFIG_DEPS)
++	$(OPCODES) $(INTL_DEPS) $(LIBIBERTY) $(CONFIG_DEPS) $(LIBSKYEYE)
++#teawater SKYEYE go back to GDB 2006.10.03 end----------------------------------
+ 
+ ADD_FILES = $(XM_ADD_FILES) $(TM_ADD_FILES) $(NAT_ADD_FILES)
+ ADD_DEPS = $(XM_ADD_FILES) $(TM_ADD_FILES) $(NAT_ADD_FILES)
+ 
+-DIST=gdb
++#teawater SKYEYE go back to GDB 2006.10.20 begin--------------------------------
++#DIST=gdb
++#teawater SKYEYE go back to GDB 2006.10.20 end----------------------------------
+ 
+ LINT=/usr/5bin/lint
+ LINTFLAGS= $(GDB_CFLAGS) $(OPCODES_CFLAGS) $(READLINE_CFLAGS) \
+@@ -418,6 +434,9 @@
+ #
+ @IGNORE_SIM@
+ @IGNORE_SIM_OBS@
++#teawater SKYEYE go back to GDB 2006.10.04 begin--------------------------------
++@IGNORE_RDP@
++#teawater SKYEYE go back to GDB 2006.10.04 end----------------------------------
+ 
+ FLAGS_TO_PASS = \
+ 	"prefix=$(prefix)" \
+@@ -880,8 +899,10 @@
+ # variables analogous to SER_HARDWIRE which get defaulted in this
+ # Makefile.in
+ 
++#teawater SKYEYE go back to GDB 2006.10.03 begin--------------------------------
+ DEPFILES = $(TDEPFILES) $(SER_HARDWIRE) $(NATDEPFILES) \
+-	   $(REMOTE_OBS) $(SIM_OBS)
++	   $(REMOTE_OBS) $(SIM_OBS) $(SKYEYE_OBS)
++#teawater SKYEYE go back to GDB 2006.10.03 end----------------------------------
+ 
+ SOURCES = $(SFILES) $(ALLDEPFILES) $(YYFILES) $(CONFIG_SRCS)
+ # Don't include YYFILES (*.c) because we already include *.y in SFILES,
+@@ -968,8 +989,10 @@
+ .c.o:
+ 	$(CC) -c $(INTERNAL_CFLAGS) $<
+ 
+-all: gdb$(EXEEXT) $(CONFIG_ALL)
++#teawater SKYEYE go back to GDB 2006.10.03 begin--------------------------------
++all: $(DIST)$(EXEEXT) $(CONFIG_ALL)
+ 	@$(MAKE) $(FLAGS_TO_PASS) DO=all "DODIRS=`echo $(SUBDIRS) | sed 's/testsuite//'`" subdir_do
++#teawater SKYEYE go back to GDB 2006.10.03 end----------------------------------
+ .PHONY: all-tui
+ all-tui: $(TUI)$(EXEEXT)
+ 
+@@ -1027,22 +1050,24 @@
+ # time it takes for make to check that all is up to date.
+ # install-only is intended to address that need.
+ install: all install-only
++#teawater SKYEYE go back to GDB 2006.10.03 begin--------------------------------
+ install-only: $(CONFIG_INSTALL)
+ 	transformed_name=`t='$(program_transform_name)'; \
+-			  echo gdb | sed -e "$$t"` ; \
++			  echo $(DIST) | sed -e "$$t"` ; \
+ 		if test "x$$transformed_name" = x; then \
+-		  transformed_name=gdb ; \
++		  transformed_name=$(DIST) ; \
+ 		else \
+ 		  true ; \
+ 		fi ; \
+ 		$(SHELL) $(srcdir)/../mkinstalldirs $(DESTDIR)$(bindir) ; \
+-		$(INSTALL_PROGRAM) gdb$(EXEEXT) \
++		$(INSTALL_PROGRAM) $(DIST)$(EXEEXT) \
+ 			$(DESTDIR)$(bindir)/$$transformed_name$(EXEEXT) ; \
+ 		$(SHELL) $(srcdir)/../mkinstalldirs \
+ 			$(DESTDIR)$(man1dir) ; \
+ 		$(INSTALL_DATA) $(srcdir)/gdb.1 \
+ 			$(DESTDIR)$(man1dir)/$$transformed_name.1
+ 	@$(MAKE) DO=install "DODIRS=$(SUBDIRS)" $(FLAGS_TO_PASS) subdir_do
++#teawater SKYEYE go back to GDB 2006.10.03 end----------------------------------
+ .PHONY: install-tui
+ install-tui:
+ 	transformed_name=`t='$(program_transform_name)'; \
+@@ -1181,11 +1206,13 @@
+ init.o: init.c $(defs_h) $(call_cmds_h)
+ 
+ # Removing the old gdb first works better if it is running, at least on SunOS.
+-gdb$(EXEEXT): gdb.o libgdb.a $(ADD_DEPS) $(CDEPS) $(TDEPLIBS)
+-	rm -f gdb$(EXEEXT)
++#teawater SKYEYE go back to GDB 2006.10.03 begin--------------------------------
++$(DIST)$(EXEEXT): gdb.o libgdb.a $(ADD_DEPS) $(CDEPS) $(TDEPLIBS)
++	rm -f $(DIST)$(EXEEXT)
+ 	$(CC_LD) $(INTERNAL_LDFLAGS) $(WIN32LDAPP) \
+-		-o gdb$(EXEEXT) gdb.o libgdb.a \
++		-o $(DIST)$(EXEEXT) gdb.o libgdb.a \
+ 		$(TDEPLIBS) $(TUI_LIBRARY) $(CLIBS) $(LOADLIBES)
++#teawater SKYEYE go back to GDB 2006.10.03 end----------------------------------
+ 
+ $(TUI)$(EXEEXT): tui-main.o libgdb.a $(ADD_DEPS) $(CDEPS) $(TDEPLIBS)
+ 	rm -f $(TUI)$(EXEEXT)
+@@ -1217,9 +1244,11 @@
+ # gdb and put a copy in gdb1, and you can run it with "gdb gdb1".
+ # Removing gdb1 before the copy is the right thing if gdb1 is open
+ # in another process.
+-gdb1$(EXEEXT): gdb$(EXEEXT)
+-	rm -f gdb1$(EXEEXT)
+-	cp gdb$(EXEEXT) gdb1$(EXEEXT)
++#teawater SKYEYE go back to GDB 2006.10.03 begin--------------------------------
++$(DIST)1$(EXEEXT): $(DIST)$(EXEEXT)
++	rm -f $(DIST)1$(EXEEXT)
++	cp $(DIST)$(EXEEXT) $(DIST)1$(EXEEXT)
++#teawater SKYEYE go back to GDB 2006.10.03 end----------------------------------
+ 
+ # Put the proper machine-specific files first, so M-. on a machine
+ # specific routine gets the one for the correct machine.  (FIXME: those
+@@ -1246,8 +1275,10 @@
+ 	@$(MAKE) $(FLAGS_TO_PASS) DO=clean "DODIRS=$(SUBDIRS)" subdir_do
+ 	rm -f *.o *.a $(ADD_FILES) *~ init.c-tmp init.l-tmp version.c-tmp
+ 	rm -f init.c version.c
+-	rm -f gdb$(EXEEXT) core make.log
+-	rm -f gdb[0-9]$(EXEEXT)
++#teawater SKYEYE go back to GDB 2006.10.03 begin--------------------------------
++	rm -f $(DIST)$(EXEEXT) core make.log
++	rm -f $(DIST)[0-9]$(EXEEXT)
++#teawater SKYEYE go back to GDB 2006.10.03 end----------------------------------
+ 	rm -f test-cp-name-parser$(EXEEXT)
+ 
+ .PHONY: clean-tui
+@@ -3142,4 +3173,8 @@
+ 	$(gdb_curses_h) $(gdb_assert_h)
+ 	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-winsource.c
+ 
++#teawater SKYEYE go back to GDB 2006.10.04 begin--------------------------------
++skyeye-target.o: skyeye-target.c
++	$(CC) -c $(INTERNAL_CFLAGS) -DMODET -I $(srcdir)/../skyeye-v1/arch/arm -I $(srcdir)/../skyeye-v1/arch/arm/common/ -I $(srcdir)/../skyeye-v1/arch/arm/common/mmu/ -I $(srcdir)/../skyeye-v1/arch/arm/mach/ -I $(srcdir/..)/skyeye-v1/arch/bfin/common -I $(srcdir)/../skyeye-v1/arch/bfin/mach -I $(srcdir)/../skyeye-v1/arch/coldfire/common -I $(srcdir)/../skyeye-v1/device/ -I $(srcdir)/../skyeye-v1/device/net -I $(srcdir)/../skyeye-v1/device/lcd -I $(srcdir)/../skyeye-v1/device/flash -I $(srcdir)/../skyeye-v1/utils/share -I $(srcdir)/../skyeye-v1/utils/main -I $(srcdir)/../skyeye-v1/utils/config -I $(srcdir)/../skyeye-v1/utils/debugger $<
++#teawater SKYEYE go back to GDB 2006.10.04 end----------------------------------
+ ### end of the gdb Makefile.in.
+diff -ruNa --exclude=CVS gdb-6.4-old/gdb/skyeye-target.c gdb-6.4/gdb/skyeye-target.c
+--- gdb-6.4-old/gdb/skyeye-target.c	1970-01-01 08:00:00.000000000 +0800
++++ gdb-6.4/gdb/skyeye-target.c	2007-02-01 17:42:53.000000000 +0800
+@@ -0,0 +1,506 @@
++/* Debugging interface for SKYEYE.
++   Written by teawater(teawater@gmail.com)
++
++   This file is part of GDB and SKYEYE.
++
++   This program is free software; you can redistribute it and/or modify
++   it under the terms of the GNU General Public License as published by
++   the Free Software Foundation; either version 2 of the License, or
++   (at your option) any later version.
++
++   This program is distributed in the hope that it will be useful,
++   but WITHOUT ANY WARRANTY; without even the implied warranty of
++   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
++   GNU General Public License for more details.
++
++   You should have received a copy of the GNU General Public License
++   along with this program; if not, write to the Free Software
++   Foundation, Inc., 59 Temple Place - Suite 330,
++   Boston, MA 02111-1307, USA.  */
++
++#include "defs.h"
++#include "inferior.h"
++#include "bfd.h"
++#include "symfile.h"
++#include "gdbcmd.h"
++#include "gdbcore.h"
++#include "serial.h"
++#include "target.h"
++#include "exceptions.h"
++#include "remote-utils.h"
++#include "gdb_string.h"
++#include "gdb_stat.h"
++#include "regcache.h"
++#include <ctype.h>
++#include <stdint.h>
++#include "mips-tdep.h"
++#include <fcntl.h>
++#include <termios.h>
++#include <signal.h>
++
++#include "skyeye_types.h"
++#include "skyeye_defs.h"
++#include "skyeye_config.h"
++#include "armemu.h"
++#include "armdefs.h"
++
++#define MAGIC_NULL_PID		42000
++
++generic_arch_t *	arch_instance;
++char *			skyeye_config_filename;
++int			global_argc = 1;
++char			org_global_argv[1][7] = {"skyeye"};
++char **			global_argv;
++int			debugmode = 0;
++int			stop_simulator = 0;
++#define MAX_BREAKPOINTS 16
++struct SkyEye_ICE{
++	  unsigned int bps[MAX_BREAKPOINTS];
++	  int num_bps;
++};
++struct SkyEye_ICE	skyeye_ice;
++extern ARMul_State *	state;
++extern void		initialize_all_arch ();
++extern int		skyeye_option_init (skyeye_config_t * config);
++extern int		sim_fetch_inferior_registers (int rn, unsigned char *memory);
++extern int		sim_store_inferior_registers (int rn, unsigned char *memory);
++extern void		init_register_type();
++extern int		sim_read (ARMword addr, unsigned char *buffer, int size);
++extern int		sim_write (ARMword addr, unsigned char *buffer, int size);
++
++struct termios skyeye_termios_old;
++void
++skyeye_exit(int ret)
++{
++	/* Restore the original terminal settings */
++        tcsetattr (0, TCSANOW, &skyeye_termios_old);
++	exit( ret);
++}
++extern cpu_config_t	bfin_cpu[];
++extern machine_config_t	arm_machines[];
++void
++display_all_support()
++{
++	int i;
++	fprintf (stderr,
++                 "----------- Architectures and CPUs simulated by SkyEye-------------\n");
++        fprintf (stderr, "-------- ARM architectures ---------\n");
++	for(i = 0; arm_machines[i].machine_name!=NULL ; i++)
++		fprintf(stderr, "%s \n",arm_machines[i].machine_name);
++	fprintf (stderr, "-------- BlackFin architectures ----\n");
++	for(i = 0; bfin_cpu[i].cpu_name!=NULL ; i++)
++		fprintf(stderr, "%s \n",bfin_cpu[i].cpu_name);
++}
++
++ARMword
++ARMul_Debug (ARMul_State * state, ARMword pc, ARMword instr)
++{
++	return (0);
++}
++void
++ARMul_ConsolePrint (ARMul_State * state, const char *format, ...)
++{
++}
++
++int
++remote_interrupt()
++{
++	return (0);
++}
++void
++usage ()
++{
++}
++
++
++
++static struct target_ops	skyeye_ops;
++static enum			target_signal resume_siggnal;
++static int			resume_step;
++static sigset_t			skyeye_maskall;
++
++
++
++static void		skyeye_open (char *name, int from_tty);
++static void		skyeye_close (int quitting);
++static void		skyeye_create_inferior (char *exec_file, char *args, char **env, int from_tty);
++static void		skyeye_mourn_inferior (void);
++static void		skyeye_resume (ptid_t ptid, int step, enum target_signal siggnal);
++static ptid_t		skyeye_wait (ptid_t ptid, struct target_waitstatus *status);
++static void		skyeye_stop (void);
++static void		skyeye_kill (void);
++static void		skyeye_prepare_to_store (void);
++static void		skyeye_fetch_registers (int regnum);
++static void		skyeye_store_registers (int regnum);
++static int		skyeye_insert_breakpoint (CORE_ADDR addr, bfd_byte *contents_cache);
++static int		skyeye_remove_breakpoint (CORE_ADDR addr, bfd_byte *contents_cache);
++#if 0
++static int		skyeye_check_watch_resources (int type, int cnt, int ot);
++static int		skyeye_insert_hw_breakpoint (CORE_ADDR addr, gdb_byte *shadow);
++static int		skyeye_remove_hw_breakpoint (CORE_ADDR addr, gdb_byte *shadow);
++#endif
++static int		skyeye_xfer_memory (CORE_ADDR mem_addr, gdb_byte *buffer, int mem_len, int should_write, struct mem_attrib *attrib, struct target_ops *target);
++static void		init_skyeye_ops (void);
++
++static void
++skyeye_open (char *name, int from_tty)
++{
++	static int	done = 0;
++
++	if (!done) {
++		//get skyeye_config_filename
++		if (name == NULL || strlen(name) == 0) {
++			skyeye_config_filename = DEFAULT_CONFIG_FILE;
++		}
++		else {
++			skyeye_config_filename = name;
++		}
++		initialize_all_devices ();
++		initialize_all_arch ();
++		init_register_type();
++		skyeye_option_init (&skyeye_config);
++		if (skyeye_read_config() < 0) {
++			error ("SKYEYE: read config file \"%s\" error.\n", skyeye_config_filename);
++		}
++		arch_instance = (generic_arch_t *) malloc (sizeof (generic_arch_t));
++		if (!arch_instance) {
++			error ("SKYEYE: allocate memeory error.\n");
++		}
++		arch_instance->init = skyeye_config.arch->init;
++		arch_instance->reset = skyeye_config.arch->reset;
++		arch_instance->step_once = skyeye_config.arch->step_once;
++		arch_instance->set_pc = skyeye_config.arch->set_pc;
++		arch_instance->get_pc = skyeye_config.arch->get_pc;
++		arch_instance->ICE_write_byte = skyeye_config.arch->ICE_write_byte;
++		arch_instance->ICE_read_byte = skyeye_config.arch->ICE_read_byte;
++
++		arch_instance->init ();
++		arch_instance->reset ();
++
++		done = 1;
++	}
++	else {
++		unpush_target (&skyeye_ops);
++	}
++	//arch_instance->reset ();
++
++	push_target (&skyeye_ops);
++}
++
++static void
++skyeye_close (int quitting)
++{
++	
++}
++
++static void
++skyeye_create_inferior (char *exec_file, char *args, char **env, int from_tty)
++{
++	if (exec_file == 0 || exec_bfd == 0) {
++		warning (_("No executable file specified."));
++	}
++
++	//arch_instance->reset ();
++
++	inferior_ptid = pid_to_ptid (MAGIC_NULL_PID);
++	remove_breakpoints ();
++	init_wait_for_inferior ();
++	insert_breakpoints ();
++	clear_proceed_status ();
++
++	if (skyeye_config.start_address != 0) {
++		proceed ((CORE_ADDR) skyeye_config.start_address, TARGET_SIGNAL_DEFAULT, 0);
++	}
++	else {
++		proceed ((CORE_ADDR) -1, TARGET_SIGNAL_DEFAULT, 0);
++	}
++}
++
++static void
++skyeye_mourn_inferior (void)
++{
++	generic_mourn_inferior ();
++}
++
++static void
++skyeye_resume (ptid_t ptid, int step, enum target_signal siggnal)
++{
++	if (PIDGET (inferior_ptid) != MAGIC_NULL_PID) {
++		error (_("The program is not being run."));
++	}
++
++	resume_siggnal = siggnal;
++	resume_step = step;
++}
++
++static void
++skyeye_sig_handler (int signo)
++{
++	target_stop ();
++}
++
++static ptid_t
++skyeye_wait (ptid_t ptid, struct target_waitstatus *status)
++{
++	int	err = 0;
++	//sig init
++#if defined (HAVE_SIGACTION) && defined (SA_RESTART)
++	struct sigaction	act, old_act;
++
++	act.sa_handler = skyeye_sig_handler;
++	act.sa_mask = skyeye_maskall;
++	act.sa_flags = SA_RESTART;
++	if (sigaction (SIGINT, &act, &old_act)) {
++		error ("SKYEYE: sigaction.");
++	}
++#else
++	static RETSIGTYPE	(*prev_sigint) ();
++
++	prev_sigint = signal (SIGINT, skyeye_sig_handler);
++	if (prev_sigint == SIG_ERR) {
++		error ("SKYEYE: signal.");
++	}
++#endif
++
++	//skyeye resume
++	if(!strcmp(skyeye_config.arch->arch_name, "arm")){
++		state->EndCondition = 0;
++		stop_simulator = 0;
++
++		if (resume_step) {
++			state->Reg[15] = ARMul_DoInstr (state);
++
++			/*
++			if (state->EndCondition == 0) {
++				//chy 20050729 ????
++				//printf ("error in sim_resume for state->EndCondition");
++				//skyeye_exit (-1);
++				err = -1;
++				goto CLEAR_SIG;
++			}
++			*/
++		}
++		else {
++			state->NextInstr = RESUME;	/* treat as PC change */
++			state->Reg[15] = ARMul_DoProg (state);
++		}
++
++		FLUSHPIPE;
++	}
++	else {
++		do {
++			arch_instance->step_once ();
++		}while(!resume_step);
++	}
++
++//CLEAR_SIG:
++	//clear sig
++#if defined (HAVE_SIGACTION) && defined (SA_RESTART)
++	if (sigaction (SIGALRM, &old_act, NULL)) {
++		error ("SKYEYE: sigaction.");
++	}
++#else
++	if (signal (SIGINT, prev_sigint) == SIG_ERR) {
++		error ("SKYEYE: signal.");
++	}
++#endif
++/*
++	if (err) {
++		error ("SKYEYE: error in sim_resume for state->EndCondition");
++	}
++*/
++	status->kind = TARGET_WAITKIND_STOPPED;
++	status->value.sig = TARGET_SIGNAL_TRAP;
++	return (inferior_ptid);
++}
++
++static void
++skyeye_stop (void)
++{
++	resume_step = 1;
++	state->EndCondition = 0;
++	state->Emulate = STOP;
++}
++
++static void
++skyeye_kill (void)
++{
++	inferior_ptid = null_ptid;
++}
++
++static void
++skyeye_prepare_to_store (void)
++{
++	/* Do nothing, since we can store individual regs */
++}
++
++static void
++skyeye_fetch_registers (int regnum)
++{
++	if (regnum >= 0) {
++		char	reg[MAX_REGISTER_SIZE];
++
++		/*
++		if (sim_fetch_register (regnum, reg) == -1) {
++			regcache_raw_supply (current_regcache, regnum, NULL);
++		}
++		else {
++			regcache_raw_supply (current_regcache, regnum, reg);
++		}
++		*/
++		//sim_fetch_register always return -1(who wrote it?)
++		sim_fetch_inferior_registers (regnum, reg) ;
++		regcache_raw_supply (current_regcache, regnum, reg);
++	}
++	else {
++		int	i;
++
++		for (i = 0; i < NUM_REGS; i++) {
++			skyeye_fetch_registers (i);
++		}
++	}
++}
++
++static void
++skyeye_store_registers (int regnum)
++{
++	if (regnum >= 0) {
++		char	reg[MAX_REGISTER_SIZE];
++
++		regcache_raw_collect (current_regcache, regnum, reg);
++		//sim_store_register always return -1(who wrote it?)
++		/*
++		if (sim_store_register (regnum, reg) == -1) {
++			error ("SKYEYE: set value to reg %d error", regnum);
++		}
++		*/
++		if (sim_store_inferior_registers (regnum, reg)) {
++			error ("SKYEYE: set value to reg %d error", regnum);
++		}
++		if (regnum == PC_REGNUM) {
++			arch_instance->set_pc ((uint32_t) read_register (PC_REGNUM));
++		}
++	}
++	else {
++		int	i;
++
++		for (i = 0; i < NUM_REGS; i++) {
++			skyeye_store_registers (i);
++		}
++	}
++}
++
++static int
++skyeye_insert_breakpoint (CORE_ADDR addr, bfd_byte *contents_cache)
++{
++	return (memory_insert_breakpoint (addr, contents_cache));
++}
++
++static int
++skyeye_remove_breakpoint (CORE_ADDR addr, bfd_byte *contents_cache)
++{
++	return (memory_remove_breakpoint (addr, contents_cache));
++}
++
++
++
++#if 0
++static int
++skyeye_check_watch_resources (int type, int cnt, int ot)
++{
++	if (type == bp_hardware_breakpoint) {
++		if (cnt > MAX_BREAKPOINTS) {
++			return (-1);
++		}
++		return (1);
++	}
++
++	return (0);
++}
++
++static int
++skyeye_insert_hw_breakpoint (CORE_ADDR addr, gdb_byte *shadow)
++{
++	if (sim_ice_breakpoint_insert (addr)) {
++		return (-1);
++	}
++
++	return (0);
++}
++
++static int
++skyeye_remove_hw_breakpoint (CORE_ADDR addr, gdb_byte *shadow)
++{
++	if (sim_ice_breakpoint_remove (addr)) {
++		return (-1);
++	}
++
++	return (0);
++}
++#endif
++
++static int
++skyeye_xfer_memory (CORE_ADDR mem_addr, gdb_byte *buffer, int mem_len, int should_write, struct mem_attrib *attrib, struct target_ops *target)
++{
++	if (should_write) {
++		return (sim_write (mem_addr, buffer, mem_len));
++	}
++	else {
++		return (sim_read (mem_addr, buffer, mem_len));
++	}
++}
++
++static void
++init_skyeye_ops (void)
++{
++	skyeye_ops.to_shortname = "skyeye";
++	skyeye_ops.to_longname = "SKYEYE";
++	skyeye_ops.to_doc = "Use the compiled-in SKYEYE simulator";
++	skyeye_ops.to_open = skyeye_open;
++	skyeye_ops.to_close = skyeye_close;
++	skyeye_ops.to_load = generic_load;
++	skyeye_ops.to_resume = skyeye_resume;
++	skyeye_ops.to_wait = skyeye_wait;
++	skyeye_ops.to_stop = skyeye_stop;
++	skyeye_ops.to_kill = skyeye_kill;
++	skyeye_ops.to_create_inferior = skyeye_create_inferior;
++	skyeye_ops.to_mourn_inferior = skyeye_mourn_inferior;
++	skyeye_ops.to_prepare_to_store = skyeye_prepare_to_store;
++	skyeye_ops.to_fetch_registers = skyeye_fetch_registers;
++	skyeye_ops.to_store_registers = skyeye_store_registers;
++	skyeye_ops.to_insert_breakpoint = skyeye_insert_breakpoint;
++	skyeye_ops.to_remove_breakpoint = skyeye_remove_breakpoint;
++	skyeye_ops.deprecated_xfer_memory = skyeye_xfer_memory;
++	skyeye_ops.to_stratum = process_stratum;
++	skyeye_ops.to_has_all_memory = 1;
++	skyeye_ops.to_has_memory = 1;
++	skyeye_ops.to_has_stack = 1;
++	skyeye_ops.to_has_registers = 1;
++	skyeye_ops.to_has_execution = 1;
++	skyeye_ops.to_has_thread_control = tc_none;
++	skyeye_ops.to_magic = OPS_MAGIC;
++#if 0
++	skyeye_ops.to_attach = skyeye_attach;
++	skyeye_ops.to_detach = skyeye_detach;
++	skyeye_ops.to_disconnect = skyeye_disconnect;
++	//skyeye_ops.to_xfer_partial = skyeye_xfer_partial;
++	skyeye_ops.to_can_use_hw_breakpoint = skyeye_check_watch_resources;
++	skyeye_ops.to_insert_hw_breakpoint = skyeye_insert_hw_breakpoint;
++	skyeye_ops.to_remove_hw_breakpoint = skyeye_remove_hw_breakpoint;
++#endif
++}
++
++void
++_initialize_skyeye (void)
++{
++	if (sigfillset (&skyeye_maskall) == -1) {
++		error ("SKYEYE: init sigal.");
++	}
++
++	global_argv = (char **)org_global_argv;
++	skyeye_ice.num_bps = 0;
++
++	init_skyeye_ops ();
++	add_target (&skyeye_ops);
++}
++
+diff -ruNa --exclude=CVS gdb-6.4-old/Makefile.in gdb-6.4/Makefile.in
+--- gdb-6.4-old/Makefile.in	2005-12-02 13:29:54.000000000 +0800
++++ gdb-6.4/Makefile.in	2007-02-01 17:42:53.000000000 +0800
+@@ -903,6 +903,7 @@
+     maybe-all-build-texinfo \
+     maybe-all-build-fixincludes
+ .PHONY: all-host
++#teawater SKYEYE go back to GDB 2006.09.30 begin--------------------------------
+ all-host:  \
+     maybe-all-ash \
+     maybe-all-autoconf \
+@@ -955,6 +956,7 @@
+     maybe-all-send-pr \
+     maybe-all-shellutils \
+     maybe-all-sid \
++    maybe-all-skyeye \
+     maybe-all-sim \
+     maybe-all-tar \
+     maybe-all-texinfo \
+@@ -971,6 +973,7 @@
+     maybe-all-libtermcap \
+     maybe-all-utils \
+     maybe-all-gnattools
++#teawater SKYEYE go back to GDB 2006.09.30 end----------------------------------
+ .PHONY: all-target
+ all-target:  \
+     maybe-all-target-libstdc++-v3 \
+@@ -1723,6 +1726,7 @@
+ 
+ 
+ .PHONY: clean-host
++#teawater SKYEYE go back to GDB 2006.09.30 begin--------------------------------
+ clean-host:  \
+     maybe-clean-ash \
+     maybe-clean-autoconf \
+@@ -1775,6 +1779,7 @@
+     maybe-clean-send-pr \
+     maybe-clean-shellutils \
+     maybe-clean-sid \
++    maybe-clean-skyeye \
+     maybe-clean-sim \
+     maybe-clean-tar \
+     maybe-clean-texinfo \
+@@ -1791,6 +1796,7 @@
+     maybe-clean-libtermcap \
+     maybe-clean-utils \
+     maybe-clean-gnattools
++#teawater SKYEYE go back to GDB 2006.09.30 begin--------------------------------
+ 
+ .PHONY: clean-target
+ clean-target:  \
+@@ -22801,6 +22807,36 @@
+ 
+ 
+ 
++#teawater SKYEYE go back to GDB 2006.09.30 begin--------------------------------
++.PHONY: all-skyeye maybe-all-skyeye
++maybe-all-skyeye:
++@if skyeye
++TARGET-skyeye=all
++maybe-all-skyeye: all-skyeye
++all-skyeye: $(HOST_SUBDIR)/skyeye/libskyeye.a
++
++$(HOST_SUBDIR)/skyeye/libskyeye.a: $(srcdir)/skyeye-v1/binary/libskyeye.a
++	mkdir -p $(HOST_SUBDIR)/skyeye
++	cp -f $(srcdir)/skyeye-v1/binary/libskyeye.a $(HOST_SUBDIR)/skyeye/libskyeye.a
++
++$(srcdir)/skyeye-v1/binary/libskyeye.a:
++	cd $(srcdir)/skyeye-v1 ; make libskyeye
++@endif skyeye
++
++
++
++.PHONY: maybe-clean-skyeye clean-skyeye
++maybe-clean-skyeye:
++@if skyeye
++maybe-clean-skyeye: clean-skyeye
++
++clean-skyeye: 
++	cd $(HOST_SUBDIR)/skyeye-v1 ; make clean
++@endif skyeye
++#teawater SKYEYE go back to GDB 2006.09.30 end----------------------------------
++
++
++
+ .PHONY: configure-sim maybe-configure-sim
+ maybe-configure-sim:
+ @if sim
diff -Nur skyeye-v1_Rel/Makefile skyeye-v1_gdb/Makefile
--- skyeye-v1_Rel/Makefile	2006-12-16 12:12:09.000000000 -0500
+++ skyeye-v1_gdb/Makefile	2007-02-01 04:45:02.000000000 -0500
@@ -233,6 +233,13 @@
 
 LIB_OBJS = $(SIM_OBJS)
 
+#teawater SKYEYE go back to GDB 2007.01.22 begin--------------------------------
+SIM_CF_OBJS = binary/cf_arch_interface.o
+CF_PATH = arch/coldfire/
+CF_COMMON_PATH = arch/coldfire/common/
+COLDFIRE_FLAG = -I arch/coldire/tracer
+#teawater SKYEYE go back to GDB 2007.01.22 end----------------------------------
+
 all:  binary/skyeye
 clean: $(SIM_EXTRA_CLEAN)
 	rm -f binary/*.o
@@ -240,6 +247,29 @@
 	rm -f binary/skyeye
 	make -C arch/coldfire clean
 
+#teawater SKYEYE go back to GDB 2007.01.22 begin--------------------------------
+#LIBSKYEYE_SIM_UTILS_OBJS = binary/arch_reg.o binary/skyeye_config.o binary/skyeye_options.o binary/skyeye_stub_win32.o binary/skyeye_arch.o
+LIBSKYEYE_SIM_UTILS_OBJS = binary/skyeye2gdb.o binary/gdbserver.o binary/arch_regdefs.o binary/arm_regdefs.o binary/cf_regdefs.o binary/bfin_regdefs.o binary/skyeye_config.o binary/skyeye_options.o binary/skyeye_arch.o
+ifeq ($(OSTYPE),msys)
+LIBSKYEYE_SIM_UTILS_OBJS += binary/skyeye_win32_stdio.o
+else
+ifeq ($(TERM),cygwin)
+LIBSKYEYE_SIM_UTILS_OBJS += binary/skyeye_stub_win32.o
+endif
+endif
+
+libskyeye: binary/libskyeye.a
+
+#binary/libarm.a binary/libmips.a binary/libbfin.a binary/libdev.a binary/libutils.a binary/libcoldfire.a
+binary/libskyeye.a: binary/libarm.a binary/libmips.a binary/libbfin.a binary/libdev.a binary/libutils.a binary/libcoldfire.a $(SIM_ARM) $(SIM_BFIN_OBJS) $(SIM_DEV_OBJS) $(LIBSKYEYE_SIM_UTILS_OBJS) $(SIM_CF_OBJS) $(SIM_CF_OBJS) $(CF_PATH)/tracer/tracer.o $(CF_PATH)/i_5206/i.o
+	$(AR) $(AR_FLAGS) binary/libskyeye.a $(SIM_ARM) $(SIM_MIPS) $(SIM_BFIN_OBJS) $(SIM_DEV_OBJS) $(LIBSKYEYE_SIM_UTILS_OBJS) $(SIM_CF_OBJS) $(CF_COMMON_PATH)/*.o $(CF_PATH)/tracer/tracer.o $(CF_PATH)/i_5206/i.o
+	$(RANLIB) binary/libskyeye.a
+
+
+patchgdb6.4:
+	cd ../..; patch -p0 < gdb-6.4/skyeye-v1/gdb642skyeye.patch
+#teawater SKYEYE go back to GDB 2007.01.22 end----------------------------------
+
 distclean mostlyclean maintainer-clean realclean: clean
 	rm -f TAGS tags
 	rm -f binary/skyeye binary/*.o binary/*.a
@@ -271,10 +301,12 @@
 	$(RANLIB) binary/libbfin.a
 
 #generate lib for coldfire architecture
-SIM_CF_OBJS = binary/cf_arch_interface.o
-CF_PATH = arch/coldfire/
-CF_COMMON_PATH = arch/coldfire/common/
-COLDFIRE_FLAG = -I arch/coldire/tracer
+#teawater SKYEYE go back to GDB 2007.01.22 begin--------------------------------
+#SIM_CF_OBJS = binary/cf_arch_interface.o
+#CF_PATH = arch/coldfire/
+#CF_COMMON_PATH = arch/coldfire/common/
+#COLDFIRE_FLAG = -I arch/coldire/tracer
+#teawater SKYEYE go back to GDB 2007.01.22 end----------------------------------
 binary/libcoldfire.a:$(SIM_CF_OBJS) 
 	make -C arch/coldfire
 	$(AR) $(AR_FLAGS) binary/libcoldfire.a $(SIM_CF_OBJS) $(CF_COMMON_PATH)/*.o $(CF_PATH)/tracer/tracer.o $(CF_PATH)/i_5206/i.o
diff -Nur skyeye-v1_Rel/utils/debugger/gdbserver.c skyeye-v1_gdb/utils/debugger/gdbserver.c
--- skyeye-v1_Rel/utils/debugger/gdbserver.c	2006-12-16 11:35:35.000000000 -0500
+++ skyeye-v1_gdb/utils/debugger/gdbserver.c	2007-02-01 04:45:02.000000000 -0500
@@ -486,6 +486,8 @@
 	convert_ascii_to_int (&from[i++], to, *len_ptr);
 }
 
+//teawater SKYEYE go back to GDB 2007.01.24 begin-------------------------------
+#if 0
 static void
 fetch_inferior_registers (int regno, unsigned char *memory)
 {
@@ -507,6 +509,9 @@
 	else
 		current_reg_type->store_register (regno, &(memory[current_reg_type->register_byte (regno)]));
 }
+#endif
+//teawater SKYEYE go back to GDB 2007.01.24 end---------------------------------
+
 int
 sim_debug ()
 {
@@ -579,15 +584,31 @@
 				break;
 #endif //chy 2005-07-30
 			case 'g':
-				fetch_inferior_registers (0, registers);
-				convert_int_to_ascii (registers, own_buf,
-						      current_reg_type->register_bytes);
+//teawater SKYEYE go back to GDB 2007.01.24 begin-------------------------------
+				if (sim_fetch_inferior_registers (-1, registers)) {
+					write_enn (own_buf);
+				}
+				else {
+					convert_int_to_ascii (registers, own_buf, current_reg_type->register_bytes);
+				}
+				//fetch_inferior_registers (0, registers);
+				//convert_int_to_ascii (registers, own_buf,
+				//		      current_reg_type->register_bytes);
+//teawater SKYEYE go back to GDB 2007.01.24 end---------------------------------
 				break;
 			case 'G':
 				convert_ascii_to_int (&own_buf[1], registers,
 						      current_reg_type->register_bytes);
-				store_inferior_registers (-1, registers);
-				write_ok (own_buf);
+//teawater SKYEYE go back to GDB 2007.01.24 begin-------------------------------
+				if (sim_store_inferior_registers (-1, registers)) {
+					write_enn (own_buf);
+				}
+				else {
+					write_ok (own_buf);
+				}
+//				store_inferior_registers (-1, registers);
+//				write_ok (own_buf);
+//teawater SKYEYE go back to GDB 2007.01.24 end---------------------------------
 				break;
 			case 'm':
 				decode_m_packet (&own_buf[1], &mem_addr,
diff -Nur skyeye-v1_Rel/utils/debugger/skyeye2gdb.c skyeye-v1_gdb/utils/debugger/skyeye2gdb.c
--- skyeye-v1_Rel/utils/debugger/skyeye2gdb.c	2006-12-16 11:35:35.000000000 -0500
+++ skyeye-v1_gdb/utils/debugger/skyeye2gdb.c	2007-02-01 04:45:02.000000000 -0500
@@ -137,6 +137,58 @@
 	return size;
 }
 
+//teawater SKYEYE go back to GDB 2007.01.24 begin-------------------------------
+extern register_defs_t *current_reg_type;
+
+int
+sim_fetch_inferior_registers (int regno, unsigned char *memory)
+{
+	if (regno < 0) {
+		for (regno = 0; regno < current_reg_type->num_regs; regno++) {
+			if (sim_fetch_inferior_registers (regno, &(memory[current_reg_type->register_byte (regno)]))) {
+				return (-1);
+			}
+		}
+	}
+	else {
+		if (current_reg_type->fetch_register) {
+			if (current_reg_type->fetch_register (regno, memory)) {
+				return (-1);
+			}
+		}
+		else {
+			return (-1);
+		}
+	}
+
+	return (0);
+}
+
+int
+sim_store_inferior_registers (int regno, unsigned char *memory)
+{
+	if (regno < 0) {
+		for (regno = 0; regno < current_reg_type->num_regs; regno++) {
+			if (sim_store_inferior_registers (regno, &(memory[current_reg_type->register_byte (regno)]))) {
+				return (-1);
+			}
+		}
+	}
+	else {
+		if (current_reg_type->fetch_register) {
+			if (current_reg_type->store_register (regno, memory)) {
+				return (-1);
+			}
+		}
+		else {
+			return (-1);
+		}
+	}
+
+	return (0);
+}
+//teawater SKYEYE go back to GDB 2007.01.24 end---------------------------------
+
 void gdbserver_cont(){
          if(!strcmp(skyeye_config.arch->arch_name,"arm")){
                 //chy 2006-04-12
